name: make-release

on: 
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    outputs:
      html_url: ${{ steps.draftrelease.outputs.html_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    
    - uses: actions/checkout@v3

    - name: zip source into one archive
      shell: bash
      run: |
        cd "$GITHUB_WORKSPACE" || exit 1

        versionfile="$(cat normalize-plex-files/version.py)"
        echo "${versionfile%VERSION=*}
        VERSION=\"$GITHUB_REF_NAME\"
        " >normalize-plex-files/version.py

        mkdir bin
        cd normalize-plex-files
        zip -r ../bin/normalize-plex-files.zip *
        cd ../bin
        (echo '#!/usr/bin/env python3'; cat normalize-plex-files.zip)> normalize-plex-files
        chmod a+rx normalize-plex-files

    - uses: ncipollo/release-action@v1
      id: draftrelease
      with:
        draft: true
        artifacts: "bin/normalize-plex-files,bin/normalize-plex-files.zip"

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: ncipollo/release-action@v1
      id: release
      with:
        draft: false
        updateOnlyUnreleased: true
        allowUpdates: true
        body: |
          # Downloadable files 
          ## Linux/UNIX-like Systems
            - download [normalize-plex-files](${{ needs.build.outputs.html_url }}/../../download/${{ github.ref_name }}/normalize-plex-files).
            - make it executable: `chmod a+rx normalize-plex-files`
            - run the executable: `./normalize-plex-files`
          ## Windows-like systems
            - download the zip archive [normalize-plex-files.zip](${{ needs.build.outputs.html_url }}/../../download/${{ github.ref_name }}/normalize-plex-files.zip).
            - run the zip archive: `python3 normalize-plex-files.zip`
